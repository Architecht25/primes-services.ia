# Mod√®le sp√©cialis√© pour les contacts Entreprises Immobili√®res
class EntrepriseImmoContact < ContactSubmission
  # Validations sp√©cifiques aux entreprises immobili√®res
  validates :business_activity, inclusion: { 
    in: %w[promotion construction renovation gestion syndic marchand], 
    allow_blank: true 
  }
  validates :investment_region, inclusion: { 
    in: %w[wallonie flandre bruxelles international], 
    allow_blank: true 
  }
  validates :project_scale, inclusion: { 
    in: %w[unitaire petit_ensemble grand_ensemble quartier], 
    allow_blank: true 
  }
  validates :timeline, inclusion: { 
    in: %w[immediate court_terme moyen_terme long_terme], 
    allow_blank: true 
  }
  validates :estimated_budget, 
    numericality: { greater_than: 0 }, 
    allow_blank: true
  validates :target_market, inclusion: { 
    in: %w[social prive mixte luxe etudiant senior], 
    allow_blank: true 
  }

  # M√©thodes sp√©cifiques aux entreprises immobili√®res
  def investment_category
    return 'non_specifie' unless estimated_budget
    
    case estimated_budget
    when 0..100_000
      'petit_investissement'
    when 100_001..500_000
      'investissement_moyen'
    when 500_001..2_000_000
      'gros_investissement'
    else
      'tres_gros_investissement'
    end
  end

  def requires_environmental_certification?
    %w[grand_ensemble quartier].include?(project_scale) || 
    estimated_budget.to_i > 1_000_000
  end

  def eligible_for_developer_incentives?
    business_activity == 'promotion' && 
    %w[social mixte].include?(target_market)
  end

  def suggested_subsidies
    subsidies = []
    
    # Aides selon l'activit√©
    case business_activity
    when 'promotion'
      subsidies << 'Aide aux promoteurs sociaux'
      subsidies << 'Subsides logement social'
      subsidies << 'Prime construction durable'
    when 'construction'
      subsidies << 'Prime entrepreneur construction'
      subsidies << 'Aide innovation construction'
      subsidies << 'Cr√©dit professionnel vert'
    when 'renovation'
      subsidies << 'Prime professionnelle r√©novation'
      subsidies << 'Aide r√©novation immeuble de rapport'
      subsidies << 'Subside valorisation patrimoine'
    when 'gestion'
      subsidies << 'Prime gestionnaire immobilier'
      subsidies << 'Aide professionnalisation gestion'
    when 'syndic'
      subsidies << 'Prime syndic professionnel'
      subsidies << 'Formation syndic agr√©√©'
    when 'marchand'
      subsidies << 'Prime marchand de biens'
      subsidies << 'Aide n√©gociant immobilier'
    end

    # Aides selon la r√©gion d'investissement
    case investment_region
    when 'wallonie'
      subsidies << 'Aide investissement Wallonie'
      subsidies << 'SOWAER - Soci√©t√© wallonne de l\'√©nergie'
      subsidies << 'Prime r√©novation √©nerg√©tique pro'
      subsidies << 'Cr√©dit logement social Wallonie' if eligible_for_developer_incentives?
    when 'flandre'
      subsidies << 'Vlaamse investeringspremie'
      subsidies << 'Sociale huisvestingsmaatschappij steun'
      subsidies << 'Renovatiepremie ondernemers'
    when 'bruxelles'
      subsidies << 'Aide investissement Bruxelles'
      subsidies << 'SLRB - Soci√©t√© du logement'
      subsidies << 'Prime r√©novation professionnelle'
      subsidies << 'Fonds du logement Bruxelles' if eligible_for_developer_incentives?
    when 'international'
      subsidies << 'Aide export immobilier'
      subsidies << 'AWEX - Agence wallonne export'
    end

    # Aides selon l'√©chelle du projet
    case project_scale
    when 'grand_ensemble', 'quartier'
      subsidies << 'Aide grands projets immobiliers'
      subsidies << 'Subside am√©nagement urbain'
      subsidies << 'Prime d√©veloppement durable'
    end

    # Aides selon le march√© cible
    case target_market
    when 'social'
      subsidies << 'Cr√©dit social construction'
      subsidies << 'Aide logement social'
      subsidies << 'Subside logement public'
    when 'etudiant'
      subsidies << 'Prime logement √©tudiant'
      subsidies << 'Aide kotiers'
    when 'senior'
      subsidies << 'Prime logement senior'
      subsidies << 'Aide maison de repos'
    end

    # Certifications environnementales
    if requires_environmental_certification?
      subsidies << 'Certification BREEAM'
      subsidies << 'Label passif professionnel'
      subsidies << 'Prime construction √©cologique'
    end

    subsidies.uniq
  end

  def business_complexity_score
    # Score de 1 √† 10 selon la complexit√© business
    score = 2 # Base entreprise
    
    score += 1 if %w[grand_ensemble quartier].include?(project_scale)
    score += 1 if business_activity == 'promotion'
    score += 1 if estimated_budget.to_i > 1_000_000
    score += 1 if investment_region == 'international'
    score += 1 if target_market == 'social'
    score += 2 if requires_environmental_certification?
    
    [score, 10].min
  end

  def requires_business_expert?
    business_complexity_score >= 7
  end

  def legal_framework_requirements
    requirements = []
    
    case business_activity
    when 'promotion'
      requirements << 'Garantie promoteur'
      requirements << 'Assurance dommages-ouvrage'
      requirements << 'Permis d\'urbanisme'
    when 'construction'
      requirements << 'Agr√©ment construction'
      requirements << 'Assurance responsabilit√© d√©cennale'
    when 'syndic'
      requirements << 'Agr√©ment syndic'
      requirements << 'Assurance responsabilit√© civile professionnelle'
    when 'gestion'
      requirements << 'Carte professionnelle immobili√®re'
      requirements << 'Compte clients s√©par√©'
    end

    if project_scale == 'quartier'
      requirements << '√âtude d\'impact environnemental'
      requirements << 'Concertation publique'
    end

    requirements
  end

  def generate_personalized_message
    message_parts = []
    message_parts << "Bonjour,"
    message_parts << ""
    
    if business_activity.present?
      activity_label = {
        'promotion' => 'promotion immobili√®re',
        'construction' => 'construction',
        'renovation' => 'r√©novation',
        'gestion' => 'gestion immobili√®re',
        'syndic' => 'syndic professionnel',
        'marchand' => 'marchand de biens'
      }
      
      message_parts << "Merci pour votre demande concernant votre activit√© de #{activity_label[business_activity]}"
      message_parts << "en r√©gion #{investment_region.humanize}."
    end
    
    if project_scale.present? || estimated_budget.present?
      message_parts << ""
      message_parts << "Votre projet (#{project_scale&.humanize&.downcase}, budget: #{estimated_budget&.to_i}&‚Ç¨) peut b√©n√©ficier de :"
      suggested_subsidies.take(5).each { |subsidy| message_parts << "‚Ä¢ #{subsidy}" }
    end
    
    if requires_business_expert?
      message_parts << ""
      message_parts << "üè¢ Ce projet n√©cessite un accompagnement business sp√©cialis√©."
      message_parts << "Nos experts en investissement immobilier vous contacteront pour :"
      message_parts << "‚Ä¢ Optimisation fiscale et financi√®re"
      message_parts << "‚Ä¢ Montage juridique optimal"
      message_parts << "‚Ä¢ Maximisation des aides publiques"
    end
    
    legal_reqs = legal_framework_requirements
    if legal_reqs.any?
      message_parts << ""
      message_parts << "üìã Cadre l√©gal requis :"
      legal_reqs.take(3).each { |req| message_parts << "‚Ä¢ #{req}" }
    end
    
    message_parts << ""
    message_parts << "Un expert business vous recontacte sous 24h pour un audit personnalis√©."
    message_parts << ""
    message_parts << "Cordialement,"
    message_parts << "L'√©quipe Primes Services - Division Entreprises Immobili√®res"
    
    message_parts.join("\n")
  end

  def fiscal_optimization_potential
    return 'faible' unless estimated_budget
    
    case investment_category
    when 'petit_investissement'
      'faible'
    when 'investissement_moyen'
      eligible_for_developer_incentives? ? 'moyen' : 'faible'
    when 'gros_investissement', 'tres_gros_investissement'
      'eleve'
    end
  end

  # M√©thode pour pr√©parer les donn√©es pour Ren0vate Pro
  def renovate_pro_redirect_params
    {
      source: 'primes_services',
      profile: 'entreprise_immo',
      activity: business_activity,
      region: investment_region,
      scale: project_scale,
      budget: estimated_budget,
      market: target_market,
      timeline: timeline,
      complexity: business_complexity_score,
      fiscal_potential: fiscal_optimization_potential,
      contact_id: id
    }.compact
  end

  def partnership_opportunities
    opportunities = []
    
    if business_activity == 'promotion' && target_market == 'social'
      opportunities << 'Partenariat soci√©t√© logement social'
    end
    
    if project_scale == 'quartier'
      opportunities << 'Partenariat commune'
      opportunities << 'Fonds europ√©ens FEDER'
    end
    
    if requires_environmental_certification?
      opportunities << 'Partenariat bureau √©tudes environnement'
      opportunities << 'Certification √©cologique'
    end
    
    opportunities
  end
end